- defaults:
    link:
      relink: true
    brew:
      - stderr: True,
      - stdout: True,

- clean: ["~"]

- create:
    - ~/Workspace
    - ~/.config

- link:
    ~/.config/starship.toml: starship.toml
    ~/.gitconfig: gitconfig
    ~/.zshrc: zshrc

- shell:
    - command: "brew bundle dump --force"
      stderr: True,
      stdout: True,
      description: Backup current Brew

- tap:
    - fluxcd/tap
    - hashicorp/tap
    - homebrew/bundle
    - homebrew/services
    - weaveworks/tap

- brew:
    - colima
    - coreutils
    - docker
    - docker-buildx
    - docker-compose
    - git-delta
    - git-flow
    - go
    - graphviz
    - helm
    - hot
    - htop
    - jq
    - kubectl
    - kustomize
    - lolcat
    - neovim
    - node
    - pipx
    - pyenv
    - python
    - qemu
    - starship
    - stern
    - telnet
    - hashicorp/tap/terraform
    - tree
    - virtualenv
    - zsh-autosuggestions
    - zsh-syntax-highlighting

- cask:
    - android-platform-tools
    - autodesk-fusion360
    - balenaetcher
    - dbeaver-community
    - openlens
    - qlmarkdown
    - rectangle
    - syntax-highlight
    - warp

- shell:
    - command: "brew search '/font-meslo-lg-nerd-font/' | awk '{ print $1 }' | xargs -I{} brew install --cask {} || true"
      stderr: True,
      stdout: True,
      description: Nerd Fonts for your IDE

    - command: "if [ -d '~/.config/nvim' ]; then git clone https://github.com/NvChad/starter ~/.config/nvim && nvim; fi"
      stderr: True,
      stdout: True,
      description: Installing NvChad

    - command: "pipx ensurepath --force"
      stderr: True,
      stdout: True,
      description: Ensure PATH

    - command: "pipx install poetry"
      stderr: True,
      stdout: True,
      description: Install Python Poetry

    - command: "poetry config virtualenvs.in-project true"
      stderr: True,
      stdout: True,
      description: Poetry virtualenvs.in-project true

    - command: "pip3 freeze >requirements.txt"
      stderr: True,
      stdout: True,
      description: Backup current Python libraries

    - command: "pip3 install pynvim ruff --break-system-packages"
      stderr: True,
      stdout: True,
      description: Installing some essential Python libraries
